stages:
  - test
  - coverage
  - build
  - deploy

jest:
  stage: test
  image: node:12-alpine
  cache:
    key: ${CI_COMMIT_REF_SLUG}
    paths:
      - node_modules/
  script:
    - npm install
    - npm run test
  coverage: '/All files[^|]*\|[^|]*\s([\d.]+)/'
  artifacts:
    paths:
      - coverage/
    reports:
      junit: 'coverage/junit.xml'
    expire_in: 1 week
  only:
    - master

pages:
  stage: coverage
  image: alpine
  cache: {}
  script:
    - ls -al coverage/
    - test -f coverage/lcov-report/index.html && rm -rf public/* && mv coverage/lcov-report/ public/
    - ls -al public/
  artifacts:
    paths:
      - public/
    expire_in: 1 hour
  only:
    - master

build:
    image: google/cloud-sdk:alpine
    before_script:
        - gcloud config set project $GOOGLE_CLOUD_PROJECT
        - gcloud auth activate-service-account --key-file $GOOGLE_CLOUD_CREDENTIALS
    stage: build
    script:
        - gcloud builds submit --tag gcr.io/$GOOGLE_CLOUD_PROJECT/gcs-radio
    only:
    - master

deploy:
    image: google/cloud-sdk:alpine
    before_script:
        - gcloud config set project $GOOGLE_CLOUD_PROJECT
        - gcloud auth activate-service-account --key-file $GOOGLE_CLOUD_CREDENTIALS
    stage: deploy
    script:
        - gcloud run deploy gcs-radio --image gcr.io/$GOOGLE_CLOUD_PROJECT/gcs-radio --platform managed --region us-west1 --allow-unauthenticated --concurrency 2 --cpu 2 --memory 512M --max-instances 250 --set-env-vars="DB_CONNECTION=$DB_CONNECTION" --set-env-vars="SPOTIFY_ID=$SPOTIFY_ID" --set-env-vars="SPOTIFY_SECRET=$SPOTIFY_SECRET" --set-env-vars="VERBOSE=true" --set-env-vars="YTDL_COOKIE=$YTDL_COOKIE" --set-env-vars="TOKEN_SECRET=$TOKEN_SECRET"
    only:
    - master

build-beta:
    image: google/cloud-sdk:alpine
    before_script:
        - gcloud config set project $GOOGLE_CLOUD_PROJECT
        - gcloud auth activate-service-account --key-file $GOOGLE_CLOUD_CREDENTIALS
    stage: build
    script:
        - gcloud builds submit --tag gcr.io/$GOOGLE_CLOUD_PROJECT/gcs-radio-beta
    only:
    - beta

deploy-beta:
    image: google/cloud-sdk:alpine
    before_script:
        - gcloud config set project $GOOGLE_CLOUD_PROJECT
        - gcloud auth activate-service-account --key-file $GOOGLE_CLOUD_CREDENTIALS
    stage: deploy
    script:
        - gcloud run deploy gcs-radio-beta --image gcr.io/$GOOGLE_CLOUD_PROJECT/gcs-radio-beta --platform managed --region us-west1 --allow-unauthenticated --concurrency 1 --cpu 1 --memory 128M --max-instances 4 --set-env-vars="DB_CONNECTION=$DB_CONNECTION" --set-env-vars="SPOTIFY_ID=$SPOTIFY_ID" --set-env-vars="SPOTIFY_SECRET=$SPOTIFY_SECRET" --set-env-vars="VERBOSE=true" --set-env-vars="YTDL_COOKIE=$YTDL_COOKIE" --set-env-vars="TOKEN_SECRET=$TOKEN_SECRET"
    only:
    - beta
